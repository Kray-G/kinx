String.apply = _function(str, func) {
    return func(str);
};

String.split = _function(str, cond) {
    if (cond.isString) {
        return str.splitByString(cond);
    } else if (cond.isRegex) {
        return cond.splitOf(str);
    } else {
        throw RuntimeException('Invalid split condition');
    }
};

String.each = _function(str, callback) {
    var len = str.length();
    for (var i = 0; i < len; ++i) {
        var r = callback(*str[i], i);
        if (r.isDefined && !r) {
            break;
        }
    }
};

String.replace = _function(str, cond, newstr) {
    if (!newstr.isString) {
        throw RuntimeException('Replacing must be done by string');
    }
    if (cond.isString) {
        return str.replaceByString(cond, newstr);
    } else if (cond.isRegex) {
        return cond.replaceOf(str, newstr);
    } else {
        throw RuntimeException('Invalid replace condition');
    }
};

String.next = _function(str) {
    if (str.length() == 0) {
        return "";
    }
    mixstr = (str !~ /^-?[0-9a-zA-Z]+$/);
    noalnum = (str =~ /^[^0-9a-zA-Z]+$/).isArray;
    var bin = [];
    var idx = str.length() - 1;
    var minus = str[0] == '-'[0];
    var prv;
    if (noalnum) {
        for (var i = idx; i >= 0; --i) {
            bin[i] = (str[i] + 1) % 0xFF;
        }
    } else if (mixstr) {
        prv = 0;
        for (var i = idx; i >= 0; --i) {
            var ch = str[i];
            if (ch == '9'[0]) {
                bin[i] = '0'[0];
            } else if (ch == 'z'[0]) {
                bin[i] = 'a'[0];
            } else if (ch == 'Z'[0]) {
                bin[i] = 'A'[0];
            } else if (('0'[0] <= ch && ch < '9'[0]) || ('a'[0] <= ch && ch < 'z'[0]) || ('A'[0] <= ch && ch < 'Z'[0])) {
                bin[i] = ch + 1;
            } else {
                bin[i] = ch;
            }
        }
    } else {
        prv = 1;
        var head = minus ? 1 : 0;
        for (var i = idx; i >= head; --i) {
            var ch = str[i];
            if (ch == '9'[0]) {
                if (prv) {
                    bin[i] = '0'[0];
                    prv = '1'[0];
                } else {
                    bin[i] = '9'[0];
                }
            } else if (ch == 'z'[0]) {
                if (prv) {
                    bin[i] = 'a'[0];
                    prv = 'a'[0];
                } else {
                    bin[i] = 'z'[0];
                }
            } else if (ch == 'Z'[0]) {
                if (prv) {
                    bin[i] = 'A'[0];
                    prv = 'A'[0];
                } else {
                    bin[i] = 'Z'[0];
                }
            } else if (ch == 0xFF) {
                bin[i] = 0;
                prv = 1;
            } else if (('0'[0] <= ch && ch < '9'[0]) || ('a'[0] <= ch && ch < 'z'[0]) || ('A'[0] <= ch && ch < 'Z'[0])) {
                if (prv) {
                    bin[i] = ch + 1;
                } else {
                    bin[i] = ch;
                }
                prv = 0;
            } else {
                bin[i] = ch;
                prv = 0;
            }
        }
    }
    if (minus) {
        if (prv) {
            bin[0] = prv;
            bin = ['-'[0], ...bin];
        } else {
            bin[0] = '-'[0];
        }
    } else {
        if (prv) {
            bin = [prv, ...bin];
        }
    }
    return *bin;
};

String.== = _function(val, obj) {
    return obj == val;
};
