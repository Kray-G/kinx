Integer.times = _function(val, callback) {
    var ary = [];
    if (callback.isFunction) {
        for (var i = 0; i < val; ++i) {
            ary[i] = callback(i, i);
        }
    } else {
        for (var i = 0; i < val; ++i) {
            ary[i] = i;
        }
    }
    return ary;
};

Integer.upto = _function(val, max, callback) {
    var ary = [];
    var index = 0;
    if (callback.isFunction) {
        for (var i = val; i <= max; ++i) {
            ary[index] = callback(i, index);
            ++index;
        }
    } else {
        for (var i = val; i <= max; ++i) {
            ary[index++] = val;
        }
    }
    return ary;
};

Integer.downto = _function(val, min, callback) {
    var ary = [];
    var index = 0;
    if (callback.isFunction) {
        for (var i = val; i >= min; --i) {
            ary[index] = callback(i, index);
            ++index;
        }
    } else {
        for (var i = val; i >= min; --i) {
            ary[index++] = val;
        }
    }
    return ary;
};

# `Integer.methodMissing` causes a bad result in some cases, so do not define `Integer.methodMissing`.
# For example, `1.unknownProperty` should be null, but to push `methodMissing function` to the stack unexpectedly.
Integer.acos    = _function(x) { return Math.acos(Double.parseDouble(x)); };
Integer.asin    = _function(x) { return Math.asin(Double.parseDouble(x)); };
Integer.atan    = _function(x) { return Math.atan(Double.parseDouble(x)); };
Integer.atan2   = _function(x, y) { return Math.atan2(Double.parseDouble(x), Double.parseDouble(y)); };
Integer.cos     = _function(x) { return Math.cos(Double.parseDouble(x)); };
Integer.sin     = _function(x) { return Math.sin(Double.parseDouble(x)); };
Integer.tan     = _function(x) { return Math.tan(Double.parseDouble(x)); };
Integer.cosh    = _function(x) { return Math.cosh(Double.parseDouble(x)); };
Integer.sinh    = _function(x) { return Math.sinh(Double.parseDouble(x)); };
Integer.tanh    = _function(x) { return Math.tanh(Double.parseDouble(x)); };
Integer.exp     = _function(x) { return Math.exp(Double.parseDouble(x)); };
Integer.ldexp   = _function(x, exp) { return Math.ldexp(Double.parseDouble(x), exp); };
Integer.log     = _function(x) { return Math.log(Double.parseDouble(x)); };
Integer.log10   = _function(x) { return Math.log10(Double.parseDouble(x)); };
Integer.pow     = _function(x, y) { return Math.pow(Double.parseDouble(x), Double.parseDouble(y)); };
Integer.sqrt    = _function(x) { return Math.sqrt(Double.parseDouble(x)); };
Integer.ceil    = _function(x) { return Math.ceil(Double.parseDouble(x)); };
Integer.fabs    = _function(x) { return Math.fabs(Double.parseDouble(x)); };
Integer.abs     = _function(x) { return Math.fabs(Double.parseDouble(x)); };
Integer.floor   = _function(x) { return Math.floor(Double.parseDouble(x)); };
Integer.fmod    = _function(x, y) { return Math.fmod(Double.parseDouble(x), Double.parseDouble(y)); };
Integer.random  = _function(x) { return Math.random(); };

Integer.next = _function(val) {
    return ++val;
};

Integer.== = _function(val, obj) {
    return obj == val;
};

# `Double.methodMissing` causes a bad result in some cases, so do not define `Double.methodMissing`.
# It is because the same reason as Integer above.
Double.acos    = _function(x) { return Math.acos(x); };
Double.asin    = _function(x) { return Math.asin(x); };
Double.atan    = _function(x) { return Math.atan(x); };
Double.atan2   = _function(x, y) { return Math.atan2(x, Double.parseDouble(y)); };
Double.cos     = _function(x) { return Math.cos(x); };
Double.sin     = _function(x) { return Math.sin(x); };
Double.tan     = _function(x) { return Math.tan(x); };
Double.cosh    = _function(x) { return Math.cosh(x); };
Double.sinh    = _function(x) { return Math.sinh(x); };
Double.tanh    = _function(x) { return Math.tanh(x); };
Double.exp     = _function(x) { return Math.exp(x); };
Double.ldexp   = _function(x, exp) { return Math.ldexp(x, exp); };
Double.log     = _function(x) { return Math.log(x); };
Double.log10   = _function(x) { return Math.log10(x); };
Double.pow     = _function(x, y) { return Math.pow(x, Double.parseDouble(y)); };
Double.sqrt    = _function(x) { return Math.sqrt(x); };
Double.ceil    = _function(x) { return Math.ceil(x); };
Double.fabs    = _function(x) { return Math.fabs(x); };
Double.abs     = _function(x) { return Math.fabs(x); };
Double.floor   = _function(x) { return Math.floor(x); };
Double.fmod    = _function(x, y) { return Math.fmod(x, Double.parseDouble(y)); };
Double.random  = _function(x) { return Math.random(); };

Math.max = _function(...val) {
    var len = val.length();
    if (len > 0) {
        var m = val[0];
        for (var i = 1; i < len; ++i) {
            m = val[i] if (m < val[i]);
        }
        return m;
    }
};

Math.min = _function(...val) {
    var len = val.length();
    if (len > 0) {
        var m = val[0];
        for (var i = 1; i < len; ++i) {
            m = val[i] if (m > val[i]);
        }
        return m;
    }
};
