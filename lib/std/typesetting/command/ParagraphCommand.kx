namespace Typesetting {

    namespace ParagraphCommand {

        class Smaller(info_, context_) {
            var fontSize_;
            public start() {
                fontSize_ = context_.font.fontSize;
                --(context_.font.fontSize);
            }
            public end() {
                context_.font.fontSize = fontSize_;
            }
        }

        class Bigger(info_, context_) {
            var fontSize_;
            public start() {
                fontSize_ = context_.font.fontSize;
                ++(context_.font.fontSize);
            }
            public end() {
                context_.font.fontSize = fontSize_;
            }
        }

        class Font(info_, context_) {
            var fontSize_;
            public start(params) {
                fontSize_ = context_.font.fontSize;
                context_.font.fontSize = Typesetting.Util.getPt(context_, params.size);
            }
            public end() {
                context_.font.fontSize = fontSize_;
            }
        }

        class Bold(info_, context_) {
            var fontObj_;
            public start() {
                fontObj_ = context_.font.fontObj;
                context_.font.fontObj = context_.font.fontObjBase.bold;
            }
            public end() {
                context_.font.fontObj = fontObj_;
            }
        }

        class Monotype(info_, context_) {
            var fontObj_, fontObjBase_;
            public start() {
                fontObj_ = context_.font.fontObj;
                fontObjBase_ = context_.font.fontObjBase;
                context_.font.fontObj = context_.fontSet.monotype.fontObj;
                context_.font.fontObjBase = context_.fontSet.monotype.fontObjBase;
            }
            public end() {
                context_.font.fontObj = fontObj_;
                context_.font.fontObjBase = fontObjBase_;
            }
        }

        class Lower(info_, context_) {
            var y_;
            public start(params) {
                y_ = context_.offsetY;
                context_.offsetY = -Typesetting.Util.getPt(context_, params.height);
            }
            public end() {
                context_.offsetY = y_;
            }
        }

        class Raise(info_, context_) {
            var y_;
            public start(params) {
                y_ = context_.offsetY;
                context_.offsetY = Typesetting.Util.getPt(context_, params.height);
            }
            public end() {
                context_.offsetY = y_;
            }
        }

        class Footnote(info_, context_) {
            var fontSize_;
            public start(params) {
                fontSize_ = context_.font.fontSize;
                context_.font.fontSize = info_.base.footnote.fontSize;
            }
            public end() {
                context_.font.fontSize = fontSize_;
            }
            public translate(value) {
                context_.footnotes.push(value);
                value.footnoteNumber = ++context_.counter.footnote;
                var y = context_.offsetY;
                context_.offsetY = Typesetting.Util.getPt(context_, "0.65em");
                var numberSize = fontSize_ * info_.base.footnote.numberSizeRatio;
                var w = new Typesetting.Word(info_).setWord(context_.font.fontObj, numberSize, '' + context_.counter.footnote);
                context_.offsetY = y;
                return w;
            }
        }

    } # namespace ParagraphCommand

} # namespace Typesetting
