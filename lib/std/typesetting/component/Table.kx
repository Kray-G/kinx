namespace Typesetting {

    namespace Component {

        class Table(opts_) : Component.Base(opts_) {
            private initialize() {
                opts_.header ??= 0;
            }
            public setHeaderPos(pos) {
                opts_.header = pos;
            }
            public setAlign(align) {
                opts_.align = align;
            }
            public setSize(size) {
                opts_.size = size;
            }
            public setCellAlign(align) {
                opts_.cellAlign = align;
            }
            public setBody(body) {
                opts_.body = body;
            }
            public setCaption(caption) {
                opts_.caption = caption;
            }
            private writeCaption(info, core) {
                var context = info.context;
                var fontSize = context.font.fontSize;
                var lineFeedWidth = fontSize * context.page.lineFeedWidthRatio;

                # info.writer.lineBreak(lineFeedWidth);
                var linetop = info.writer.getLineTop(context.font.fontObj, fontSize);
                var number = @makeCountrNumber(context, "table");
                var tableHeader = info.base.table.label + ' ' + number;
                var cap = tableHeader + ' ' + opts_.caption;
                core.util.writeCenter({}, cap, context.font.fontObj, fontSize, lineFeedWidth);
                @appendListOf(info, context, "lot", info.base.table.level + 1, tableHeader, opts_.caption, linetop);

                if (opts_.label) {
                    var pagenum = info.writer.getPageIndex();
                    context.xref[opts_.label] = {
                        page:      pagenum,
                        counter:   number,
                        name:      cap,
                        text:      opts_.caption,
                        y:         linetop,
                    };
                }

                info.writer.lineBreak(info.base.table.captionsep);
            }
            public write(info, context, core) {
                core.flushParagraph();
                return new Typesetting.ProcessDoc.Table(info, context, core.util, core.paragraph).exec(opts_, &() => writeCaption(info, core));
            }
        }

    } # namespace Component

} # namespace Typesetting
