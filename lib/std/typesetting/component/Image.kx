namespace Typesetting {

    namespace Component {

        class Image(opts_) : Component.Base(opts_) {
            public setCaption(caption) {
                opts_.caption = caption;
            }
            public apply(doc) {
                return @applyDoc(doc, "image", opts_);
            }
            public write(info, context, core) {
                if (opts_.float.left || opts_.float.right) {
                    core.flushParagraph();
                    var fontSize = context.font.fontSize;
                    var fontObj = context.font.fontObj;
                    info.writer.loadFloatingImage(opts_.file, opts_.scale, opts_.float, opts_.caption,
                        &(center, y, imageY, height) => @floatingImageCaption(info, context, opts_.label, opts_.caption, fontObj, fontSize, center, y, imageY, height));
                    return;
                }

                var op = [];
                opts_.keySet().each { &(key):
                    if (opts_[key].isString) {
                        op.push(key + "=" + opts_[key]);
                    }
                };
                return new Typesetting.Component.Paragraph("\\image[%{op.join(',')}]{%{opts_.file}}");
            }
        }

    } # namespace Component

} # namespace Typesetting
