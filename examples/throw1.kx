# The root function to throw exception.

var f =
"function func1() {\n"
"    try {\n"
"        try {\n"
"            System.println('Nothing is thrown, good.');\n"
"        }\n"
"        finally {\n"
"            System.println('finally: func1-1');\n"
"        }\n"
"        System.println('Throw exception');\n"
"        throw RuntimeException('Oh, it\\'s a careless mistake!');\n"
"    }\n"
"    finally {\n"
"        System.println('finally: func1-2');\n"
"    }\n"
"}\n"
"func1();";

# Catches the exception from func1, but rethrow it.
function func2() {
    try {
        try {
            f.eval();
        }
        finally {
            System.println('finally: func2-1');
        }
    }
    catch (e) {
        System.println('catch: func2');
        throw;
    }
    finally {
        System.println('finally: func2-2');
    }
}

# No one catch the exception, but finally clause will be correctly working.
function func3() {
    try {
        try {
            func2();
        }
        finally {
            System.println('finally: func3-1');
        }
    }
    finally {
        System.println('finally: func3-2');
    }
}

# Starts the test.
try {
    func3();
}
catch (e) {
    System.println("%{e.type()}: %{e.what()}");
    e.printStackTrace();
}
finally {
    System.println('finally: main-block');
}

System.println("end-of-program.");
