using Parsek;

var $ = new Parsek();

System.println($.letter.times(3).desc(['a', 'b', 'c', 'd']).parseAll("a"));
System.println($.letter.times(3).desc('a letter, 3 times').parseAll("aa"));
System.println($.letter.times(3).desc('a letter, 3 times').parseAll("aaa"));
System.println($.letter.times(3).desc('a letter, 3 times').parseAll("aaaa"));
System.println($.letter.times(2, 3).desc('a letter, 2 or 3 times').parseAll("a"));
System.println($.letter.times(2, 3).desc('a letter, 2 or 3 times').parseAll("aa"));
System.println($.letter.times(2, 3).desc('a letter, 2 or 3 times').parseAll("aaa"));
System.println($.letter.times(2, 3).desc('a letter, 2 or 3 times').parseAll("aaaa"));
System.println($.letter.times(2, 3).desc('a letter, 2 or 3 times').skip($.eof).parseAll("aaaa"));

System.println(($.seq($.succeed(1), $.all, $.succeed(2))).parseAll("aaa"));
System.println(($.succeed(1).and($.all).and($.succeed(2))).parseAll("aaa"));
System.println(($.succeed(1) + $.all + $.succeed(2)).parseAll("aaa"));
System.println($.sepBy1($.oneOf("abc"), $.string('|')).parseAll('a|b'));
System.println($.sepBy1($.lazy(['x', 'b', 'c'], &() => $.oneOf("xbc")), $.string('|')).parseAll('a|b'));

$.seqMap(
  $.oneOf("Q\n").many(),
  $.string("B"),
  $.index,
  function(_prefix, B, index) {
    System.println(index.offset); // => 8
    System.println(index.line); // => 3
    System.println(index.column); // => 5
    return B;
  }
).parseAll("QQ\n\nQQQB");

var CustomString = $.string("%")
  .then($.any)
  .chain(function(start) {
    var end =
      {
        "[": "]",
        "(": ")",
        "{": "}",
        "<": ">"
      }[start] || start;

    return $.takeWhile(function(c) {
      return c != end;
    }).skip($.string(end));
  });

System.println(CustomString.parseAll("%:a string:"));
System.println(CustomString.parseAll("%[a string]"));
System.println(CustomString.parseAll("%""{a string}"));
System.println(CustomString.parseAll("%(a string)"));
System.println(CustomString.parseAll("%<a string>"));
