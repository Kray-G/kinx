using Pdf;

var fontList = [
    "Courier",
    "Courier-Bold",
    "Courier-Oblique",
    "Courier-BoldOblique",
    "Helvetica",
    "Helvetica-Bold",
    "Helvetica-Oblique",
    "Helvetica-BoldOblique",
    "Times-Roman",
    "Times-Bold",
    "Times-Italic",
    "Times-BoldItalic",
    "Symbol",
    "ZapfDingbats",
    null
];

var pageTitle = "Font Demo";
pdf = new Pdf();

/* Add a new page object. */
page = pdf.AddPage();

var height = page.GetHeight();
var width = page.GetWidth();

/* Print the lines of the page. */
page.SetLineWidth(1);
page.Rectangle(50, 50, width - 100, height - 110);
page.Stroke();

/* Print the title of the page (with positioning center). */
var defFont = pdf.GetFont("Helvetica", null);
page.SetFontAndSize(defFont, 24);

var tw = page.TextWidth(pageTitle);
page.BeginText();
page.TextOut((width - tw) / 2, height - 50, pageTitle);
page.EndText();

/* output subtitle. */
page.BeginText();
page.SetFontAndSize(defFont, 16);
page.TextOut(60, height - 80, "<Standerd Type1 fonts samples>");
page.EndText();

page.BeginText();
page.MoveTextPos(60, height - 105);

i = 0;
while (fontList[i]) {
    var sampText = "abcdefgABCDEFG12345!#$%&+-@?";
    var font = pdf.GetFont(fontList[i], null);

    /* print a label of text */
    page.SetFontAndSize(defFont, 9);
    page.ShowText(fontList[i]);
    page.MoveTextPos(0, -18);

    /* print a sample text. */
    page.SetFontAndSize(font, 20);
    page.ShowText(sampText);
    page.MoveTextPos(0, -20);

    i++;
}

page.EndText();

pdf.SaveToFile("pdfdemo_font.pdf");
